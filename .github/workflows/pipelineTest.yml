name: Go Build, Deploy, and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.15' # Specify the Go version

      - name: Build
        run: |
          go build -v -o hello-world ./... # Replace with your build command

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: hello-world
          path: hello-world

  create-release:
    name: Create Release and Upload Artifact
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: hello-world

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./hello-world
          asset_name: hello-world
          asset_content_type: application/octet-stream

  deploy-dev:
    name: Deploy to Dev
    needs: create-release
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: hello-world

      - name: Deploy to Dev
        run: echo "Deploying to dev environment" # Replace with your deployment command
        # Add steps that deploy the artifact to your dev environment

  deploy-qa:
    name: Deploy to QA
    needs: create-release
    runs-on: ubuntu-latest
    environment: qa
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: hello-world

      - name: Deploy to QA
        run: echo "Deploying to QA environment" # Replace with your deployment command
        # Add steps that deploy the artifact to your QA environment
